{"version":3,"sources":["mvc/errors/TemplateRenderingError.ts"],"names":[],"mappings":";;AAAA,qCAAwC;AACxC,yDAAsD;AAEtD;;GAEG;AACH,MAAa,sBAAuB,SAAQ,uCAAmB;IAG7D,YAAY,MAA0B,EAAE,MAAuB,EAAE,GAAU;QACzE,KAAK,CAAC,sBAAsB,CAAC,YAAY,CAAC,MAAM,EAAE,MAAM,EAAE,GAAG,CAAC,CAAC,CAAC;IAClE,CAAC;IAED;;;OAGG;IACH,MAAM,CAAC,YAAY,CAAC,MAA0B,EAAE,MAAuB,EAAE,GAAU;QACjF,OAAO,8BAA8B,aAAM,CAAC,MAAM,CAAC,IAAI,MAAM,CAAC,MAAM,CAAC,MAAM,GAAG,GAAG,CAAC;IACpF,CAAC;CACF;AAdD,wDAcC","file":"TemplateRenderingError.js","sourcesContent":["import {nameOf, Type} from \"@tsed/core\";\nimport {InternalServerError} from \"ts-httpexceptions\";\n\n/**\n * @private\n */\nexport class TemplateRenderingError extends InternalServerError {\n  name: \"TEMPLATING_RENDER_ERROR\";\n\n  constructor(target: Type<any> | string, method: string | symbol, err: Error) {\n    super(TemplateRenderingError.buildMessage(target, method, err));\n  }\n\n  /**\n   *\n   * @returns {string}\n   */\n  static buildMessage(target: Type<any> | string, method: string | symbol, err: Error) {\n    return `Template rendering error : ${nameOf(target)}.${String(method)}()\\n` + err;\n  }\n}\n"],"sourceRoot":"../../../src"}