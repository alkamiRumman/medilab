{"version":3,"sources":["mvc/models/ParamMetadata.ts"],"names":[],"mappings":";;;AAAA,qCAAsD;AAgBtD,MAAa,aAAc,SAAQ,eAAQ;IA8BzC,YAAY,OAAiC;QAC3C,KAAK,CAAC,OAAO,CAAC,MAAM,EAAE,OAAO,CAAC,WAAW,EAAE,OAAO,CAAC,KAAK,CAAC,CAAC;QApB5D;;;WAGG;QAEI,kBAAa,GAAY,KAAK,CAAC;QACtC;;;WAGG;QAEI,iBAAY,GAAY,KAAK,CAAC;QAWnC,MAAM,EAAC,UAAU,EAAE,SAAS,EAAE,aAAa,EAAE,YAAY,EAAE,OAAO,EAAC,GAAG,OAAO,CAAC;QAE9E,IAAI,CAAC,UAAU,GAAG,UAAU,IAAI,IAAI,CAAC,UAAU,CAAC;QAChD,IAAI,CAAC,SAAS,GAAG,SAAS,IAAI,IAAI,CAAC,SAAS,CAAC;QAC7C,IAAI,CAAC,aAAa,GAAG,OAAO,CAAC,aAAa,CAAC,CAAC;QAC5C,IAAI,CAAC,YAAY,GAAG,OAAO,CAAC,YAAY,CAAC,CAAC;QAC1C,IAAI,CAAC,OAAO,GAAG,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC;IACzC,CAAC;CACF;AApCC;IADC,iBAAU,EAAE;;iDACa;AAK1B;IADC,iBAAU,EAAE;;gDACyB;AAMtC;IADC,iBAAU,EAAE;;oDACyB;AAMtC;IADC,iBAAU,EAAE;;mDACwB;AAMrC;IADC,iBAAU,EAAE;;8CACmC;AA5BlD,sCAyCC","file":"ParamMetadata.js","sourcesContent":["import {Enumerable, Storable, Type} from \"@tsed/core\";\nimport {ParamTypes} from \"./ParamTypes\";\n\nexport interface IParamConstructorOptions {\n  target: Type<any>;\n  propertyKey: string | symbol;\n  index: number;\n  service?: string | Type<any> | ParamTypes;\n  required?: boolean;\n  expression?: string;\n  useType?: Type<any>;\n  useConverter?: boolean;\n  useValidation?: boolean;\n  paramType?: string | ParamTypes;\n}\n\nexport class ParamMetadata extends Storable implements IParamConstructorOptions {\n  /**\n   *\n   */\n  @Enumerable()\n  public expression: string;\n  /**\n   *\n   */\n  @Enumerable()\n  public paramType: string | ParamTypes;\n  /**\n   *\n   * @type {boolean}\n   */\n  @Enumerable()\n  public useValidation: boolean = false;\n  /**\n   *\n   * @type {boolean}\n   */\n  @Enumerable()\n  public useConverter: boolean = false;\n\n  /**\n   *\n   */\n  @Enumerable()\n  public service: string | Type<any> | ParamTypes;\n\n  constructor(options: IParamConstructorOptions) {\n    super(options.target, options.propertyKey, options.index);\n\n    const {expression, paramType, useValidation, useConverter, service} = options;\n\n    this.expression = expression || this.expression;\n    this.paramType = paramType || this.paramType;\n    this.useValidation = Boolean(useValidation);\n    this.useConverter = Boolean(useConverter);\n    this.service = service || this.service;\n  }\n}\n"],"sourceRoot":"../../../src"}