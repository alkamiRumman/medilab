{"version":3,"sources":["mvc/decorators/params/cookies.ts"],"names":[],"mappings":";;AAEA,wDAAmD;AACnD,2CAAsC;AACtC,+DAA0D;AAqC1D,SAAgB,aAAa,CAAC,GAAG,IAAW;IAC1C,MAAM,EAAC,UAAU,EAAE,OAAO,EAAE,YAAY,GAAG,KAAK,EAAE,aAAa,GAAG,KAAK,EAAC,GAAG,mCAAgB,CAAC,IAAI,CAAC,CAAC;IAElG,OAAO,qBAAS,CAAC,uBAAU,CAAC,OAAO,EAAE;QACnC,UAAU;QACV,OAAO;QACP,YAAY;QACZ,aAAa;KACd,CAAC,CAAC;AACL,CAAC;AATD,sCASC;AA4CD,SAAgB,OAAO,CAAC,GAAG,IAAW;IACpC,aAAa;IACb,OAAO,aAAa,CAAC,GAAG,IAAI,CAAC,CAAC;AAChC,CAAC;AAHD,0BAGC","file":"cookies.js","sourcesContent":["import {Type} from \"@tsed/core\";\nimport {IParamOptions} from \"../../interfaces/IParamOptions\";\nimport {ParamTypes} from \"../../models/ParamTypes\";\nimport {UseFilter} from \"./useFilter\";\nimport {mapParamsOptions} from \"./utils/mapParamsOptions\";\n\n/**\n * Cookies or CookiesParams return the value from [request.cookies](http://expressjs.com/en/4x/api.html#req.cookies) object.\n *\n * #### Example\n *\n * ```typescript\n * @Controller('/')\n * class MyCtrl {\n *    @Post('/')\n *    create(@Cookies() cookies: any) {\n *       console.log('Entire cookies', cookies);\n *    }\n *\n *    @Post('/')\n *    create(@Cookies('id') id: string) {\n *       console.log('ID', id);\n *    }\n *\n *    @Post('/')\n *    create(@Cookies('user') user: IUser) {\n *       console.log('user', user);\n *    }\n * }\n * ```\n * > For more information on deserialization see [converters](/docs/converters.md) page.\n *\n * @param expression The path of the property to get.\n * @param useType The type of the class that to be used to deserialize the data.\n * @decorator\n * @returns {ParameterDecorator}\n */\nexport function CookiesParams(expression: string | any, useType: any): ParameterDecorator;\nexport function CookiesParams(): ParameterDecorator;\nexport function CookiesParams(expression: string | any): ParameterDecorator;\nexport function CookiesParams(options: IParamOptions<any>): ParameterDecorator;\nexport function CookiesParams(...args: any[]): ParameterDecorator {\n  const {expression, useType, useConverter = false, useValidation = false} = mapParamsOptions(args);\n\n  return UseFilter(ParamTypes.COOKIES, {\n    expression,\n    useType,\n    useConverter,\n    useValidation\n  });\n}\n\n/**\n * Cookies o CookiesParams return the value from [request.cookies](http://expressjs.com/en/4x/api.html#req.cookies) object.\n *\n * #### Example\n *\n * ```typescript\n * @Controller('/')\n * class MyCtrl {\n *    @Post('/')\n *    create(@Cookies() body: any) {\n *       console.log('Entire body', body);\n *    }\n *\n *    @Post('/')\n *    create(@Cookies('id') id: string) {\n *       console.log('ID', id);\n *    }\n *\n *    @Post('/')\n *    create(@Cookies('user') user: User) { // with deserialization\n *       console.log('user', user);\n *    }\n *\n *    @Post('/')\n *    create(@Cookies('users', User) users: User[]) { // with deserialization\n *       console.log('users', users);\n *    }\n * }\n * ```\n * > For more information on deserialization see [converters](/docs/converters.md) page.\n *\n * @param expression The path of the property to get.\n * @param useType The type of the class that to be used to deserialize the data.\n * @decorator\n * @aliasof CookiesParams\n * @returns {ParameterDecorator}\n */\nexport function Cookies(expression: string, useType: Type<any>): ParameterDecorator;\nexport function Cookies(expression: string): ParameterDecorator;\nexport function Cookies(useType: Type<any>): ParameterDecorator;\nexport function Cookies(options: IParamOptions<any>): ParameterDecorator;\nexport function Cookies(): ParameterDecorator;\nexport function Cookies(...args: any[]): ParameterDecorator {\n  // @ts-ignore\n  return CookiesParams(...args);\n}\n"],"sourceRoot":"../../../../src"}