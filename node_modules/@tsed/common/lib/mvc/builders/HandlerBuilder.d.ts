import { InjectorService } from "@tsed/di";
import { IHandlerContext } from "../interfaces/IHandlerContext";
import { EndpointMetadata } from "../models/EndpointMetadata";
import { HandlerMetadata } from "../models/HandlerMetadata";
/**
 * @stable
 */
export declare class HandlerBuilder {
    private handlerMetadata;
    private debug;
    constructor(handlerMetadata: HandlerMetadata);
    /**
     *
     * @param obj
     * @returns {HandlerBuilder}
     */
    static from(obj: any | EndpointMetadata): {
        build(injector: InjectorService): any;
    };
    static resolve(obj: any | EndpointMetadata, injector: InjectorService): HandlerMetadata;
    static handle(process: any, context: IHandlerContext): any;
    /**
     *
     * @returns {any}
     */
    build(injector: InjectorService): any;
    private createDispatcher;
    /**
     *
     * @returns {Promise<any>}
     * @param injector
     * @param context
     */
    private invoke;
    /**
     *
     * @param context
     * @param o
     * @returns {string}
     */
    private log;
    private checkContext;
    /**
     *
     * @returns {any}
     * @param context
     */
    private buildNext;
}
