import { InjectorService, TokenProvider } from "@tsed/di";
import { ExpressApplication } from "../../server/decorators/expressApplication";
import { ControllerProvider } from "../models/ControllerProvider";
export interface IRoute {
    route: string;
    token: TokenProvider;
}
export interface IRouteController {
    route: string;
    provider: ControllerProvider;
}
export interface IRouteDetails {
    method: string;
    name: string;
    url: string;
    className: string;
    methodClassName: string;
    parameters: any;
    returnType?: any;
}
/**
 * `RouteService` is used to provide all routes collected by annotation `@Controller`.
 */
export declare class RouteService {
    private injector;
    private expressApplication;
    private readonly _routes;
    constructor(injector: InjectorService, expressApplication: ExpressApplication);
    readonly routes: IRouteController[];
    addRoutes(routes: IRoute[]): void;
    /**
     * Add a new route in the route registry
     * @param endpoint
     * @param token
     */
    addRoute(endpoint: string, token: TokenProvider): this;
    /**
     * Get all routes built by TsExpressDecorators and mounted on Express application.
     * @returns {IControllerRoute[]}
     */
    getRoutes(): IRouteDetails[];
    /**
     * @deprecated Use getRoutes instead of
     */
    getAll(): IRouteDetails[];
    /**
     *
     * @param ctrl
     * @param endpointUrl
     */
    private buildRoutes;
}
