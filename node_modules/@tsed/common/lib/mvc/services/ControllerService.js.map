{"version":3,"sources":["mvc/services/ControllerService.ts"],"names":[],"mappings":";;;;AAAA,qCAAsD;AACtD,iCAAiG;AACjG,qEAAgE;AAChE,yEAAoE;AACpE,iDAA8D;AAE9D;;;GAGG;AAKH,IAAa,iBAAiB,GAA9B,MAAa,iBAAkB,SAAQ,eAA6C;IAClF,YACU,eAAgC,EACf,QAAuB,EACxC,YAA0B;QAElC,KAAK,CAAC,eAAsB,EAAE,EAAC,MAAM,EAAE,EAAC,IAAI,EAAE,iBAAY,CAAC,UAAU,EAAC,EAAC,CAAC,CAAC;QAJjE,oBAAe,GAAf,eAAe,CAAiB;QACf,aAAQ,GAAR,QAAQ,CAAe;QACxC,iBAAY,GAAZ,YAAY,CAAc;IAGpC,CAAC;IAED;;OAEG;IAEH,0BAA0B;IAC1B,IAAI,MAAM;QACR,OAAO,IAAI,CAAC,YAAY,CAAC,MAAM,IAAI,EAAE,CAAC;IACxC,CAAC;IAED;;;;;OAKG;IAEH,MAAM,CAAC,GAAG,CAAC,MAAiB;QAC1B,OAAO,uCAAkB,CAAC,GAAG,CAAC,MAAM,CAAuB,CAAC;IAC9D,CAAC;IAED;;;;OAIG;IAEH,MAAM,CAAC,GAAG,CAAC,MAAiB;QAC1B,OAAO,uCAAkB,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;IACxC,CAAC;IAED;;;;;OAKG;IAEH,MAAM,CAAC,GAAG,CAAC,MAAiB,EAAE,QAA4B;QACxD,uCAAkB,CAAC,GAAG,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;QAEzC,OAAO,IAAI,CAAC;IACd,CAAC;IAED;;;;;;;OAOG;IAEI,MAAM,CAAI,MAAW,EAAE,SAAoC,IAAI,GAAG,EAAkB,EAAE,gBAAwB;QACnH,OAAO,IAAI,CAAC,eAAe,CAAC,MAAM,CAAI,MAAM,CAAC,OAAO,IAAI,MAAM,EAAE,MAAM,CAAC,CAAC;IAC1E,CAAC;CACF,CAAA;AAHC;IADC,iBAAU,CAAC,qFAAqF,CAAC;;qDAC5D,GAAG;gEAA+E,CAAC,oBAAD,CAAC;+CAExH;AAtCD;IADC,iBAAU,CAAC,kDAAkD,CAAC;;6CAC5C,WAAI;;kCAEtB;AAQD;IADC,iBAAU,CAAC,kDAAkD,CAAC;;6CAC5C,WAAI;;kCAEtB;AASD;IADC,iBAAU,CAAC,kDAAkD,CAAC;;6CAC5C,WAAI,EAAiB,uCAAkB;;kCAIzD;AAlDU,iBAAiB;IAJ7B,eAAU,CAAC;QACV,KAAK,EAAE,kBAAa,CAAC,SAAS;QAC9B,MAAM,EAAE,IAAI;KACb,CAAC;IAIG,mBAAA,kBAAa,EAAE,CAAA;6CADS,oBAAe,UAElB,2BAAY;GAJzB,iBAAiB,CAgE7B;AAhEY,8CAAiB","file":"ControllerService.js","sourcesContent":["import {Deprecated, ProxyMap, Type} from \"@tsed/core\";\nimport {Configuration, Injectable, InjectorService, ProviderScope, ProviderType} from \"@tsed/di\";\nimport {ControllerProvider} from \"../models/ControllerProvider\";\nimport {ControllerRegistry} from \"../registries/ControllerRegistry\";\nimport {IRouteController, RouteService} from \"./RouteService\";\n\n/**\n * @private\n * @deprecated\n */\n@Injectable({\n  scope: ProviderScope.SINGLETON,\n  global: true\n})\nexport class ControllerService extends ProxyMap<Type<any> | any, ControllerProvider> {\n  constructor(\n    private injectorService: InjectorService,\n    @Configuration() private settings: Configuration,\n    private routeService: RouteService\n  ) {\n    super(injectorService as any, {filter: {type: ProviderType.CONTROLLER}});\n  }\n\n  /**\n   * @deprecated\n   */\n\n  /* istanbul ignore next */\n  get routes(): IRouteController[] {\n    return this.routeService.routes || [];\n  }\n\n  /**\n   *\n   * @param target\n   * @returns {ControllerProvider}\n   * @deprecated\n   */\n  @Deprecated(\"static ControllerService.get(). Removed feature.\")\n  static get(target: Type<any>): ControllerProvider | undefined {\n    return ControllerRegistry.get(target) as ControllerProvider;\n  }\n\n  /**\n   *\n   * @param target\n   * @deprecated\n   */\n  @Deprecated(\"static ControllerService.has(). Removed feature.\")\n  static has(target: Type<any>) {\n    return ControllerRegistry.has(target);\n  }\n\n  /**\n   *\n   * @param target\n   * @param provider\n   * @deprecated\n   */\n  @Deprecated(\"static ControllerService.set(). Removed feature.\")\n  static set(target: Type<any>, provider: ControllerProvider) {\n    ControllerRegistry.set(target, provider);\n\n    return this;\n  }\n\n  /**\n   * Invoke a controller from his Class.\n   * @param target\n   * @param locals\n   * @param designParamTypes\n   * @returns {T}\n   * @deprecated\n   */\n  @Deprecated(\"ControllerService.invoke(). Removed feature. Use injectorService.invoke instead of.\")\n  public invoke<T>(target: any, locals: Map<Type<any> | any, any> = new Map<Type<any>, any>(), designParamTypes?: any[]): T {\n    return this.injectorService.invoke<T>(target.provide || target, locals);\n  }\n}\n"],"sourceRoot":"../../../src"}