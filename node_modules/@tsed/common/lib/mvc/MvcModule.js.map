{"version":3,"sources":["mvc/MvcModule.ts"],"names":[],"mappings":";;;AAAA,iCAA+D;AAC/D,mEAA8D;AAC9D,8CAAiD;AACjD,oEAA+D;AAE/D,0DAAqD;AACrD,0DAAqD;AACrD,oEAA+D;AAK/D,IAAa,SAAS,GAAtB,MAAa,SAAS;IACpB,YAAY,QAAyB;QACnC,MAAM,OAAO,GAAG,QAAQ;aACrB,YAAY,CAAC,iBAAY,CAAC,UAAU,CAAC;aACrC,GAAG,CAAC,QAAQ,CAAC,EAAE;YACd,IAAI,CAAC,QAAQ,CAAC,SAAS,EAAE,EAAE;gBACzB,OAAO,IAAI,qCAAiB,CAAC,QAA8B,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;aAC9E;QACH,CAAC,CAAC;aACD,MAAM,CAAC,OAAO,CAAC,CAAC;QAEnB,OAAO,EAAC,OAAO,EAAC,CAAC;IACnB,CAAC;CACF,CAAA;AAbY,SAAS;IAHrB,WAAM,CAAC;QACN,OAAO,EAAE,CAAC,oBAAe,EAAE,iCAAe,EAAE,2BAAY,EAAE,qCAAiB,EAAE,+BAAkB,EAAE,2BAAY,CAAC;KAC/G,CAAC;6CAEsB,oBAAe;GAD1B,SAAS,CAarB;AAbY,8BAAS","file":"MvcModule.js","sourcesContent":["import {InjectorService, Module, ProviderType} from \"@tsed/di\";\nimport {ConverterModule} from \"../converters/ConverterModule\";\nimport {JsonSchemesService} from \"../jsonschema\";\nimport {ControllerBuilder} from \"./builders/ControllerBuilder\";\nimport {ControllerProvider} from \"./models/ControllerProvider\";\nimport {ParseService} from \"./services/ParseService\";\nimport {RouteService} from \"./services/RouteService\";\nimport {ValidationService} from \"./services/ValidationService\";\n\n@Module({\n  imports: [InjectorService, ConverterModule, ParseService, ValidationService, JsonSchemesService, RouteService]\n})\nexport class MvcModule {\n  constructor(injector: InjectorService) {\n    const routers = injector\n      .getProviders(ProviderType.CONTROLLER)\n      .map(provider => {\n        if (!provider.hasParent()) {\n          return new ControllerBuilder(provider as ControllerProvider).build(injector);\n        }\n      })\n      .filter(Boolean);\n\n    return {routers};\n  }\n}\n"],"sourceRoot":"../../src"}