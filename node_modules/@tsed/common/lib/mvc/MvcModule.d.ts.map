{"version":3,"sources":["mvc/MvcModule.ts"],"names":[],"mappings":"AAAA,OAAO,EAAC,eAAe,EAAuB,MAAM,UAAU,CAAC;AAS/D,qBAGa,SAAS;gBACR,QAAQ,EAAE,eAAe;CAYtC","file":"MvcModule.d.ts","sourcesContent":["import {InjectorService, Module, ProviderType} from \"@tsed/di\";\nimport {ConverterModule} from \"../converters/ConverterModule\";\nimport {JsonSchemesService} from \"../jsonschema\";\nimport {ControllerBuilder} from \"./builders/ControllerBuilder\";\nimport {ControllerProvider} from \"./models/ControllerProvider\";\nimport {ParseService} from \"./services/ParseService\";\nimport {RouteService} from \"./services/RouteService\";\nimport {ValidationService} from \"./services/ValidationService\";\n\n@Module({\n  imports: [InjectorService, ConverterModule, ParseService, ValidationService, JsonSchemesService, RouteService]\n})\nexport class MvcModule {\n  constructor(injector: InjectorService) {\n    const routers = injector\n      .getProviders(ProviderType.CONTROLLER)\n      .map(provider => {\n        if (!provider.hasParent()) {\n          return new ControllerBuilder(provider as ControllerProvider).build(injector);\n        }\n      })\n      .filter(Boolean);\n\n    return {routers};\n  }\n}\n"],"sourceRoot":"../../src"}