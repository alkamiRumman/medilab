{"version":3,"sources":["mvc/components/AuthenticatedMiddleware.ts"],"names":[],"mappings":";;;;AAAA,yDAA+C;AAC/C,+DAA0D;AAC1D,oEAA+D;AAC/D,0DAAiD;AAGjD;;;;GAIG;AAEH,IAAa,uBAAuB,+BAApC,MAAa,uBAAuB;IAC3B,GAAG,CAAQ,OAAY,EAAkB,QAAsB;QACpE,MAAM,OAAO,GAAG,QAAQ,CAAC,GAAG,CAAC,yBAAuB,CAAC,IAAI,EAAE,CAAC;QAC5D,aAAa;QACb,IAAI,OAAO,CAAC,eAAe,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,OAAO,CAAC,EAAE;YAChE,MAAM,IAAI,gCAAY,CAAC,cAAc,CAAC,CAAC;SACxC;IACH,CAAC;CACF,CAAA;AAPC;IAAY,mBAAA,aAAG,EAAE,CAAA,EAAgB,mBAAA,2BAAY,EAAE,CAAA;;;;kDAM9C;AAPU,uBAAuB;IADnC,uBAAU,EAAE;GACA,uBAAuB,CAQnC;AARY,0DAAuB","file":"AuthenticatedMiddleware.js","sourcesContent":["import {Unauthorized} from \"ts-httpexceptions\";\nimport {Middleware} from \"../decorators/class/middleware\";\nimport {EndpointInfo} from \"../decorators/params/endpointInfo\";\nimport {Req} from \"../decorators/params/request\";\nimport {IMiddleware} from \"../interfaces\";\n\n/**\n * This middleware manage the authentication based on passport strategy.\n *\n * @middleware\n */\n@Middleware()\nexport class AuthenticatedMiddleware implements IMiddleware {\n  public use(@Req() request: Req, @EndpointInfo() endpoint: EndpointInfo) {\n    const options = endpoint.get(AuthenticatedMiddleware) || {};\n    // @ts-ignore\n    if (request.isAuthenticated && !request.isAuthenticated(options)) {\n      throw new Unauthorized(\"Unauthorized\");\n    }\n  }\n}\n"],"sourceRoot":"../../../src"}