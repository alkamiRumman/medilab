{"version":3,"sources":["jsonschema/decorators/propertySerialize.ts"],"names":[],"mappings":";;AACA,yCAAsC;AAEtC;;;;;;;;;;;;;;;;;;GAkBG;AACH,SAAgB,iBAAiB,CAAC,EAAuB;IACvD,OAAO,qBAAU,CAAC,CAAC,gBAAkC,EAAE,EAAE;QACvD,gBAAgB,CAAC,WAAW,GAAG,EAAE,CAAC;IACpC,CAAC,CAAC,CAAC;AACL,CAAC;AAJD,8CAIC","file":"propertySerialize.js","sourcesContent":["import {PropertyMetadata} from \"../class/PropertyMetadata\";\nimport {PropertyFn} from \"./property\";\n\n/**\n * Call the function after property serialization.\n *\n * ## Example\n *\n * ```typescript\n * class Model {\n *    @PropertyDeserialize(v => v + 1)\n *    property: string;\n * }\n * ```\n *\n * @param {Function} fn\n * @returns {Function}\n * @decorator\n * @converters\n * @jsonschema\n * @property\n */\nexport function PropertySerialize(fn: (value: any) => any) {\n  return PropertyFn((propertyMetadata: PropertyMetadata) => {\n    propertyMetadata.onSerialize = fn;\n  });\n}\n"],"sourceRoot":"../../../src"}