{"version":3,"sources":["server/components/GlobalAcceptMimesMiddleware.ts"],"names":[],"mappings":";;;AAAA,iCAAuC;AACvC,yDAAgD;AAChD,mCAAuD;AAEvD;;GAEG;AAEH,IAAa,2BAA2B,GAAxC,MAAa,2BAA2B;IACtC,YAAqC,aAA4B;QAA5B,kBAAa,GAAb,aAAa,CAAe;IAAG,CAAC;IAErE,GAAG,CAAQ,OAAY;QACrB,MAAM,IAAI,GAAG,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,IAAS,EAAE,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC;QAEzF,IAAI,CAAC,IAAI,EAAE;YACT,MAAM,IAAI,iCAAa,CAAC,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;SACpE;IACH,CAAC;CACF,CAAA;AAPC;IAAK,mBAAA,SAAG,EAAE,CAAA;;;;sDAMT;AATU,2BAA2B;IADvC,gBAAU,EAAE;IAEE,mBAAA,kBAAa,EAAE,CAAA;;GADjB,2BAA2B,CAUvC;AAVY,kEAA2B","file":"GlobalAcceptMimesMiddleware.js","sourcesContent":["import {Configuration} from \"@tsed/di\";\nimport {NotAcceptable} from \"ts-httpexceptions\";\nimport {IMiddleware, Middleware, Req} from \"../../mvc\";\n\n/**\n * @middleware\n */\n@Middleware()\nexport class GlobalAcceptMimesMiddleware implements IMiddleware {\n  constructor(@Configuration() private configuration: Configuration) {}\n\n  use(@Req() request: Req) {\n    const find = this.configuration.acceptMimes.find((mime: any) => !!request.accepts(mime));\n\n    if (!find) {\n      throw new NotAcceptable(this.configuration.acceptMimes.join(\", \"));\n    }\n  }\n}\n"],"sourceRoot":"../../../src"}