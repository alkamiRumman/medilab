{"version":3,"sources":["server/components/GlobalAcceptMimesMiddleware.ts"],"names":[],"mappings":"AAAA,OAAO,EAAC,aAAa,EAAC,MAAM,UAAU,CAAC;AAEvC,OAAO,EAAC,WAAW,EAAc,GAAG,EAAC,MAAM,WAAW,CAAC;AAEvD;;GAEG;AACH,qBACa,2BAA4B,YAAW,WAAW;IAChC,OAAO,CAAC,aAAa;gBAAb,aAAa,EAAE,aAAa;IAEjE,GAAG,CAAQ,OAAO,EAAE,GAAG;CAOxB","file":"GlobalAcceptMimesMiddleware.d.ts","sourcesContent":["import {Configuration} from \"@tsed/di\";\nimport {NotAcceptable} from \"ts-httpexceptions\";\nimport {IMiddleware, Middleware, Req} from \"../../mvc\";\n\n/**\n * @middleware\n */\n@Middleware()\nexport class GlobalAcceptMimesMiddleware implements IMiddleware {\n  constructor(@Configuration() private configuration: Configuration) {}\n\n  use(@Req() request: Req) {\n    const find = this.configuration.acceptMimes.find((mime: any) => !!request.accepts(mime));\n\n    if (!find) {\n      throw new NotAcceptable(this.configuration.acceptMimes.join(\", \"));\n    }\n  }\n}\n"],"sourceRoot":"../../../src"}