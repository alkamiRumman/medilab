{"version":3,"sources":["server/utils/listenServer.ts"],"names":[],"mappings":";AAAA,OAAO,KAAK,IAAI,MAAM,MAAM,CAAC;AAC7B,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAE/B,wBAAgB,YAAY,CAAC,IAAI,EAAE,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,MAAM,EAAE,QAAQ,EAAE;IAAC,KAAK,EAAE,OAAO,CAAC;IAAC,OAAO,EAAE,MAAM,GAAG,MAAM,CAAC;IAAC,IAAI,EAAE,MAAM,CAAA;CAAC,GAAG,OAAO,CAAC;IAAC,OAAO,EAAE,MAAM,CAAC;IAAC,IAAI,EAAE,MAAM,CAAC;IAAC,KAAK,EAAE,OAAO,CAAA;CAAC,CAAC,CAc3L","file":"listenServer.d.ts","sourcesContent":["import * as Http from \"http\";\nimport * as Https from \"https\";\n\nexport function listenServer(http: Http.Server | Https.Server, settings: {https: boolean; address: string | number; port: number}): Promise<{address: string; port: number, https: boolean}> {\n  const {address, port, https} = settings;\n\n  const promise = new Promise((resolve, reject) => {\n    http.on(\"listening\", resolve).on(\"error\", reject);\n  }).then(() => {\n    const port = (http.address() as any).port;\n\n    return {address: settings.address as string, port, https};\n  });\n\n  http.listen(port, address as any);\n\n  return promise;\n}\n"],"sourceRoot":"../../../src"}