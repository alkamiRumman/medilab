{"version":3,"sources":["server/utils/createInjector.ts"],"names":[],"mappings":"AAAA,OAAO,EAAkB,eAAe,EAAe,MAAM,UAAU,CAAC;AAOxE,wBAAgB,cAAc,CAAC,QAAQ,GAAE,GAAQ,mBAqBhD","file":"createInjector.d.ts","sourcesContent":["import {GlobalProviders, InjectorService, ProviderType} from \"@tsed/di\";\nimport {$log} from \"ts-log-debug\";\nimport {ServerSettingsService} from \"../../config/services/ServerSettingsService\";\n\n$log.name = \"TSED\";\n$log.level = \"info\";\n\nexport function createInjector(settings: any = {}) {\n  const injector = new InjectorService();\n\n  // Init settings\n  injector.settings = createSettingsService(injector);\n  injector.logger = $log;\n\n  injector.settings.scopes = {\n    ...(settings.scopes || {}),\n    [ProviderType.CONTROLLER]: settings.controllerScope\n  };\n\n  // @ts-ignore\n  injector.settings.set(settings);\n\n  /* istanbul ignore next */\n  if (injector.settings.env === \"test\") {\n    injector.logger.stop();\n  }\n\n  return injector;\n}\n\nfunction createSettingsService(injector: InjectorService) {\n  const provider = GlobalProviders.get(ServerSettingsService)!.clone();\n\n  provider.instance = injector.invoke<ServerSettingsService>(provider.useClass);\n  injector.addProvider(ServerSettingsService, provider);\n\n  return provider.instance;\n}\n"],"sourceRoot":"../../../src"}