{"version":3,"sources":["decorators/module.ts"],"names":[],"mappings":";;;AAAA,qCAA2C;AAC3C,iCAAkD;AAElD,+DAA0D;AAE1D,mDAA8C;AAe9C,SAAgB,MAAM,CAAC,KAA0E,EAAE;QAA5E,EAAC,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,OAAiD,EAA/C,wEAAgB;IAClE,OAAO,sBAAe,CACpB,6BAAa,CAAC,aAAa,CAAC,EAC5B,eAAU,CAAC;QACT,IAAI,EAAE,iBAAY,CAAC,QAAQ;QAC3B,KAAK,EAAE,6BAAa,CAAC,SAAS;QAC9B,OAAO;QACP,IAAI;QACJ,UAAU,EAAE,KAAK;QACjB,IAAI;KACL,CAAC,CACH,CAAC;AACJ,CAAC;AAZD,wBAYC","file":"module.js","sourcesContent":["import {applyDecorators} from \"@tsed/core\";\nimport {Injectable, ProviderType} from \"@tsed/di\";\nimport {IDIConfigurationOptions} from \"../interfaces/IDIConfigurationOptions\";\nimport {ProviderScope} from \"../interfaces/ProviderScope\";\nimport {TokenProvider} from \"../interfaces/TokenProvider\";\nimport {Configuration} from \"./configuration\";\n\nexport interface IModuleOptions extends IDIConfigurationOptions {\n  /**\n   * Define dependencies to build the provider\n   */\n  imports?: TokenProvider[];\n  /**\n   *\n   */\n  scope?: ProviderScope;\n\n  [key: string]: any;\n}\n\nexport function Module({imports, deps, root, scope, ...configuration}: Partial<IModuleOptions> = {}) {\n  return applyDecorators(\n    Configuration(configuration),\n    Injectable({\n      type: ProviderType.PROVIDER,\n      scope: ProviderScope.SINGLETON,\n      imports,\n      deps,\n      injectable: false,\n      root\n    })\n  );\n}\n"],"sourceRoot":"../../src"}