{"version":3,"sources":["decorators/module.ts"],"names":[],"mappings":"AAEA,OAAO,EAAC,uBAAuB,EAAC,MAAM,uCAAuC,CAAC;AAC9E,OAAO,EAAC,aAAa,EAAC,MAAM,6BAA6B,CAAC;AAC1D,OAAO,EAAC,aAAa,EAAC,MAAM,6BAA6B,CAAC;AAG1D,MAAM,WAAW,cAAe,SAAQ,uBAAuB;IAC7D;;OAEG;IACH,OAAO,CAAC,EAAE,aAAa,EAAE,CAAC;IAC1B;;OAEG;IACH,KAAK,CAAC,EAAE,aAAa,CAAC;IAEtB,CAAC,GAAG,EAAE,MAAM,GAAG,GAAG,CAAC;CACpB;AAED,wBAAgB,MAAM,CAAC,EAAC,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,aAAa,EAAC,GAAE,OAAO,CAAC,cAAc,CAAM,YAYlG","file":"module.d.ts","sourcesContent":["import {applyDecorators} from \"@tsed/core\";\nimport {Injectable, ProviderType} from \"@tsed/di\";\nimport {IDIConfigurationOptions} from \"../interfaces/IDIConfigurationOptions\";\nimport {ProviderScope} from \"../interfaces/ProviderScope\";\nimport {TokenProvider} from \"../interfaces/TokenProvider\";\nimport {Configuration} from \"./configuration\";\n\nexport interface IModuleOptions extends IDIConfigurationOptions {\n  /**\n   * Define dependencies to build the provider\n   */\n  imports?: TokenProvider[];\n  /**\n   *\n   */\n  scope?: ProviderScope;\n\n  [key: string]: any;\n}\n\nexport function Module({imports, deps, root, scope, ...configuration}: Partial<IModuleOptions> = {}) {\n  return applyDecorators(\n    Configuration(configuration),\n    Injectable({\n      type: ProviderType.PROVIDER,\n      scope: ProviderScope.SINGLETON,\n      imports,\n      deps,\n      injectable: false,\n      root\n    })\n  );\n}\n"],"sourceRoot":"../../src"}