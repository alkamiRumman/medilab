{"version":3,"sources":["decorators/configuration.ts"],"names":[],"mappings":";;AAAA,qCAA2E;AAC3E,iDAA4C;AAM5C,SAAgB,aAAa,CAAC,gBAAkD,EAAE;IAChF,OAAO,CAAC,GAAG,IAAyB,EAAE,EAAE;QACtC,QAAQ,uBAAgB,CAAC,IAAI,EAAE,IAAI,CAAC,EAAE;YACpC,KAAK,OAAO;gBACV,eAAQ,CAAC,eAAe,EAAE,aAAa,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;gBAElD,MAAM;YACR,KAAK,uBAAuB;gBAC1B,OAAO,eAAM,CAAC,aAAa,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC;SACzC;IACH,CAAC,CAAC;AACJ,CAAC;AAXD,sCAWC","file":"configuration.js","sourcesContent":["import {DecoratorParameters, getDecoratorType, StoreSet} from \"@tsed/core\";\nimport {Inject} from \"../decorators/inject\";\nimport {IDIConfigurationOptions} from \"../interfaces/IDIConfigurationOptions\";\nimport {DIConfiguration} from \"../services/DIConfiguration\";\n\nexport type Configuration = IDIConfigurationOptions & DIConfiguration;\n\nexport function Configuration(configuration: Partial<IDIConfigurationOptions> = {}): Function {\n  return (...args: DecoratorParameters) => {\n    switch (getDecoratorType(args, true)) {\n      case \"class\":\n        StoreSet(\"configuration\", configuration)(args[0]);\n\n        break;\n      case \"parameter.constructor\":\n        return Inject(Configuration)(...args);\n    }\n  };\n}\n"],"sourceRoot":"../../src"}